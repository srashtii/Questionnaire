// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionData;

#nullable disable

namespace QuestionData.Migrations
{
    [DbContext(typeof(QuesContext))]
    [Migration("20230817135315_dataSeed")]
    partial class dataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuestionDomain.AnswerOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAnswer")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAnswer = true,
                            QuestionId = 1,
                            Title = "English"
                        },
                        new
                        {
                            Id = 2,
                            IsAnswer = false,
                            QuestionId = 1,
                            Title = "French"
                        },
                        new
                        {
                            Id = 3,
                            IsAnswer = false,
                            QuestionId = 2,
                            Title = "Python"
                        },
                        new
                        {
                            Id = 4,
                            IsAnswer = true,
                            QuestionId = 2,
                            Title = "C#"
                        },
                        new
                        {
                            Id = 5,
                            IsAnswer = false,
                            QuestionId = 3,
                            Title = "MVC"
                        },
                        new
                        {
                            Id = 6,
                            IsAnswer = true,
                            QuestionId = 3,
                            Title = "Azure functions"
                        },
                        new
                        {
                            Id = 7,
                            IsAnswer = true,
                            QuestionId = 3,
                            Title = "DDD Web API"
                        },
                        new
                        {
                            Id = 8,
                            IsAnswer = true,
                            QuestionId = 4,
                            Title = "Code that follows best practices"
                        });
                });

            modelBuilder.Entity("QuestionDomain.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Which language do you prefer ?",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Text = "Which programming language do you prefer ?",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Text = "Which architecture do you work on ?",
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            Text = "What do you mean by clean code ?",
                            Type = 0
                        });
                });

            modelBuilder.Entity("QuestionDomain.AnswerOption", b =>
                {
                    b.HasOne("QuestionDomain.Question", "Question")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuestionDomain.Question", b =>
                {
                    b.Navigation("AnswerOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
